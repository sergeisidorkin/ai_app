name: Deploy

on:
  workflow_run:
    workflows: ["CI"]      # имя вашего CI workflow
    types: [completed]
    branches: [main]

concurrency:
  group: deploy-main
  cancel-in-progress: true

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          command_timeout: 10m
          script: |
            set -euo pipefail

            APP_DIR="$HOME/ai_appdir"
            REPO_DIR="$APP_DIR/ai_app"
            VENV="$APP_DIR/ai_appenv/bin/activate"
            ENV_PATH_FILE="$APP_DIR/env/prod.env"
            REPO_SSH="git@github.com:sergeisidorkin/ai_app.git"   # <-- ВАЖНО: правильный URL

            # 1) Bootstrap
            if [ ! -d "$REPO_DIR/.git" ]; then
              mkdir -p "$APP_DIR"
              git clone "$REPO_SSH" "$REPO_DIR"
            fi

            cd "$REPO_DIR"

            # 2) Обновляем код (жёстко выравниваемся на origin/main)
            if ! git remote -v | grep -q "$REPO_SSH"; then
              git remote set-url origin "$REPO_SSH"
            fi
            git fetch --all --prune
            git checkout -B main origin/main
            git reset --hard origin/main
            git clean -fd
            echo "Deploying commit: $(git rev-parse --short HEAD)"

            # (необяз.) первый контакт с github.com — чтобы known_hosts не стопорил
            ssh -o StrictHostKeyChecking=no -T git@github.com || true

            # 3) deps
            source "$VENV"
            pip install -r requirements.txt

            # 4) Django команды из корня APP_DIR
            cd "$APP_DIR"
            export DJANGO_SETTINGS_MODULE=ai_app.settings
            export ENV_PATH="$ENV_PATH_FILE"
            export PYTHONPATH="$APP_DIR:${PYTHONPATH:-}"
            test -f "$ENV_PATH_FILE" || { echo "prod.env not found: $ENV_PATH_FILE" >&2; exit 1; }

            python -m django check
            python -m django migrate --noinput
            python -m django collectstatic --noinput

            # 5) restart
            sudo systemctl restart ai_app

            # 6) health
            for i in {1..20}; do [ -S "$APP_DIR/run/gunicorn.sock" ] && break; sleep 0.5; done
            curl --fail --unix-socket "$APP_DIR/run/gunicorn.sock" -H "Host: imcmontanai.ru" http://unix/health/
            curl --fail -I https://imcmontanai.ru/health/ | grep -q "200 OK"

            echo "Deploy OK"
